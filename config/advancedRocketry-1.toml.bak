
[General]
	#Maximum gravity the crystallizer can work at. 0 to disable!
	crystalliserMaximumGravity = 0
	#Multiplier for the build speed of the Rocket Builder (0.5 is twice as fast 2 is half as fast
	buildSpeedMultiplier = 1.0
	#Multiplier for the amount of fluid this tank can hold
	blockTankCapacity = 1.0
	#If true, the boots only protect the player on planets with low gravity
	lowGravityBoots = false
	#Amount of force the jetpack provides with respect to gravity
	jetPackForce = 1.3
	#If false, the gravity controller cannot be built or used
	enableGravityMachine = true
	#Should the cutting machine be able to cut vanilla wood into planks
	sawMillCutVanillaWood = true
	#If true, the machines from AdvancedRocketry will produce things like plates/rods for other mods even if Advanced Rocketry itself does not use the material (This can increase load time)
	makeMaterialsForOtherMods = true

["Orbital Laser Drill"]
	#Power multiplier for the laser drill machine
	LaserDrillPowerMultiplier = 1.0
	#List of oredictionary names of ores allowed to be mined by the laser drill if surface drilling is disabled.  Ores can be specified by just the oreName:<size> or by <modname>:<blockname>:<meta>:<size> where size is optional
	laserDrillOres = ["oreIron", "oreGold", "oreCopper", "oreTin", "oreRedstone", "oreDiamond"]
	#Laser drill will not mine these dimension
	spaceLaserDimIdBlackList = []
	#Enables the laser drill machine
	EnableLaserDrill = true
	#If true, the orbital laser will actually mine blocks on the planet below
	laserDrillPlanet = false
	#True if the ores in laserDrillOres should be a blacklist, false for a whitelist
	laserDrillOres_blacklist = false

[Terraforming]
	TerraformerRequiresFluids = true
	#how many millibuckets/t are required to keep the terraformer running
	TerraformerFluidConsumeRate = 40
	#If true, dimensions not added by AR can be terraformed
	allowTerraformingNonARWorlds = false
	#Enables terraforming items and blocks
	EnableTerraforming = true
	#EXPERIMENTAL: If set to true allows contruction and usage of the terraformer.  This is known to cause strange world generation after successful terraform
	allowTerraforming = false
	#Max number of blocks allowed to be changed per tick
	terraformBlockPerTick = 1
	#Multplier for atmosphere change speed
	terraformMult = 1.0
	#How many blocks have the biome changed per tick.  Large numbers can slow the server down
	biomeUpdateSpeed = 1

[Oxygen]
	#Power consumption multiplier for the oxygen vent
	OxygenVentPowerMultiplier = 1.0
	#list entities which should not be affected by atmosphere properties
	entityAtmBypass = []
	#If true, the Oxygen scrubbers require a consumable carbon collection cartridge
	scrubberRequiresCartrige = true
	#Multiplier for the amount of fluid this tank can hold
	suitTankMultiplier = 1.0
	#If true, Galacticcraft's air will be disabled entirely requiring use of Advanced Rocketry's Oxygen system on GC planets
	OverrideGCAir = true
	#Blocks that are not automatically detected as sealable but should seal.  Format "Mod:Blockname"  for example "minecraft:chest"
	sealableBlockWhiteList = []
	#Maximum time in minutes that the spacesuit's internal buffer can store O2 for
	spaceSuitO2Buffer = 30
	#Blocks that are automatically detected as sealable but should not seal.  Format "Mod:Blockname"  for example "minecraft:chest"
	sealableBlockBlackList = []
	#If true, allows players being hurt due to lack of oxygen and allows effects from non-standard atmosphere types
	EnableAtmosphericEffects = true
	#Multiplier on how much O2 an oxygen vent consumes per tick
	oxygenVentConsumptionMultiplier = 1.0
	#If true, breaking an extinguished torch will drop an extinguished torch instead of a vanilla torch
	dropExtinguishedTorches = false
	#Amount of damage inflicted with each tick on an entity in a vacuum
	#Range: 0 ~ 100
	vacuumDamage = 1

[Stations]
	#Multiplier for warp travel time
	warpTravelTime = 1.0
	#The largest size a space station can be.  Should also be a power of 2 (512)
	SpaceStationBuildRadius = 1024
	#If true, players will be able to completely disable gravity on spacestation.  It's possible to get stuck and require a teleport
	allowZeroGSpacestations = false
	#Dimension ID to use for space stations, changing this could really break things!
	spaceStationId = "advancedrocketry:space"
	#How many units of fuel should each Dilithium Crystal give to warp ships
	pointsPerDilithium = 500

["Resource Collection Missions"]
	#Multiplier for the amount of time gas collection missions take
	gasMissionMultiplier = 1.0
	#list of fluid names that can be harvested as Gas
	harvestableGasses = []
	#Multiplier changing how long a mining mission takes
	miningMissionTmeMultiplier = 1.0

[Energy]
	#Multiplier for the amount of power per tick the black hole generator should produce
	blackHoleGeneratorMultiplier = 1.0
	#Amount of power per tick the solar generator should produce
	solarGeneratorMultiplier = 1
	#Multiplier for the amount of energy produced by the microwave reciever
	MicrowaveRecieverMultiplier = 1.0
	#minecraft:dirt;1
	blackHoleTimings = ["minecraft:stone;1", "minecraft:dirt;1", "minecraft:netherrack;1", "minecraft:cobblestone;1"]
	#List of blocks and the amount of ticks they can power the black hole generator format: 'modname:block:meta;number_of_ticks'
	defaultBurnTime = 500

[Planets]
	#If true, planets must be discovered in the warp controller before being visible
	planetsMustBeDiscovered = false
	#Prevents any vanilla biomes from spawning on planets
	blackListVanillaBiomes = false
	#Maximum unique biomes per planet
	maxBiomesPerPlanet = 5
	#If true, players will respawn near beds on planets IF the spawn location is in a breathable atmosphere
	allowPlanetRespawn = false
	#setting this to true will force AR to read from the XML file in the config/advRocketry instead of the local data, intended for use pack developers to ensure updates are pushed through
	resetPlanetsFromXML = false
	#If true, players will respawn near beds on planets REGARDLESS of the spawn location being in a non-breathable atmosphere. Requires 'allowPlanetRespawn' being true.
	forcePlanetRespawn = false
	#Chance of planet discovery in the warp ship monitor is not all planets are initially discovered
	planetDiscoveryChance = 5

[Client]
	#If true, AR will use a custom skybox on planets
	PlanetSkyOverride = true
	#Advanced visual effects
	advancedVFX = true
	#If true, AR will use a custom skybox on space stations
	StationSkyOverride = true
	#If true, allows players to experience nausea on non-standard atmosphere types
	EnableAtmosphericNausea = true

	[Client.Rockets]
		#Set to false if rockets should not damage blocks
		rocketsDamageBlocks = false
		#If true, rockets will be able to actually fly around space
		experimentalSpaceFlight = false
		#TBI multiplier for asteroid flights
		asteroidTBIBurnMult = 1.0
		#List of fluid names for fluids that can be used as rocket bipropellant fuels
		rocketBipropellants = ["advancedrocketry:hydrogen"]
		#How high the rocket has to go before it reaches station clearance
		#Range: > 255
		stationClearanceHeight = 1000
		#List of fluid names for fluids that can be used as rocket nuclear working fuels
		rocketWorkingFluids = ["hydrogen"]
		#How long transbody injection is before the rocket can exit
		transBodyInjection = 0
		#TBI multiplier for warp flights
		warpTBIBurnMult = 10.0
		#Multiplier for per-tank capacity
		fuelCapacityMultiplier = 1.0
		#Mod:Blockname  for example "minecraft:chest"
		rocketBlockBlackList = ["minecraft:portal", "minecraft:bedrock", "minecraft:snow_layer", "minecraft:flowing_water", "minecraft:lava", "minecraft:flowing_lava"]
		#Multiplier for per-engine thrust
		thrustMultiplier = 1.0
		#If true, planets with higher gravity require more fuel and lower gravity would require less
		gravityAffectsFuels = true
		#Set to false if rockets should not be able to be fueled by and and will require a fueling station
		canBeFueledByHand = true
		#How high the rocket has to go before it reaches orbit
		#Range: > 255
		OrbitHeight = 1000
		#List of fluid names for fluids that can be used as rocket monopropellants
		rocketFuels = ["advancedrocketry:rocket_fuel;2"]
		#Set to false if rockets should not require fuel to fly
		rocketsRequireFuel = true
		#List of fluid names for fluids that can be used as rocket bipropellant oxidizers
		rocketOxidizers = ["oxygen"]
		#Setting to false will disable the retrorockets that fire automatically on reentry on both player and automated rockets
		autoRetroRockets = true

	[Client."World Generation"]
		#True if the ores in geodeOres should be a blacklist
		geodeOres_blacklist = false
		#average size of the geodes
		geodeBaseSize = 36
		GenerateTin = true
		TinPerChunk = 10
		AluminumPerClump = 16
		#If true, then low pressure planets will have meteor craters.  Note: setting this option to false overrides 'generageCraters' in the planetDefs.xml
		generateCraters = true
		generateDilithium = true
		#List of block names of blocks (usally ores) allowed to spawn in geodes
		geodeOres = ["minecraft:iron_ore", "minecraft:gold_ore", "libvulpes:orecopper", "libvulpes:oretin", "minecraft:redstone_ore"]
		RutilePerChunk = 6
		DilithiumPerChunkLuna = 10
		EnableOreGen = true
		DilithiumPerClump = 16
		IridiumPerChunk = 1
		CopperPerChunk = 10
		#Should Electric Mushrooms be able to spawn lightning
		electricPlantsSpawnLightning = true
		generateIridium = false
		#If true, then ore-containing geodes are generated on high pressure planets
		generateGeodes = true
		AluminumPerChunk = 1
		#Enable to allow structures like villages and mineshafts to generate on planets with a breathable atmosphere.  Note, setting this to false will override 'generateStructures' in the planetDefs.xml
		generateVanillaStructures = false
		#Biomes that only spawn on worlds with pressures over 125, will override blacklist.
		HighPressureBiomes = []
		GenerateCopper = true
		#List of Biomes to be blacklisted from spawning as BiomeIds, default is: river, sky, hell, void, alienForest
		BlacklistedBiomes = ["minecraft:river", "minecraft:the_end", "minecraft:badlands", "minecraft:the_void"]
		RutilePerClump = 6
		#variation in geode size
		geodeVariation = 24
		#Some worlds have a chance of spawning single biomes contained in this list.
		SingleBiomes = ["minecraft:desert_hills", "minecraft:mushroom_fields", "minecraft:tall_birch_hills", "minecraft:ice_spikes"]
		#If true, then very hot planets planets will volcanos.  Note: setting this option to false overrides 'generateVolcanos' in the planetDefs.xml
		generateVolcanos = true
		DilithiumPerChunk = 1
		IridiumPerClump = 16
		generateAluminum = true
		TinPerClump = 6
		GenerateRutile = true
		CopperPerClump = 6

	[Client.Performance]
		#BitMask: 0: no threading, radius based; 1: threading, radius based; 2: no threading volume based; 3: threading volume based
		atmosphereCalculationMethod = 3
		#Radius of the O2 vent.  if atmosphereCalculationMethod is 2 or 3 then max volume is calculated from this radius.  WARNING: larger numbers can lead to lag
		oxygenVentSize = 32

